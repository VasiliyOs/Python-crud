name: Developing

on:
  push:
    branches: [ "dev" ]

jobs:
  test:
    runs-on: self-hosted
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: kubsu
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.dev
          tags: ${{ vars.DOCKERHUB_USERNAME }}/test-python-crud:latest
          load: true

      - name: Run tests
        run: |
          docker run --rm --network=host ${{ vars.DOCKERHUB_USERNAME }}/test-python-crud:latest

  push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          file: ./Dockerfile.dev
          tags: ${{ vars.DOCKERHUB_USERNAME }}/test-python-crud:latest

name: Deploy

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push production image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.prod
          push:true
          tags:${{ vars.DOCKERHUB_USERNAME }}/python-crud:${{ github.sha }}

      - name：Deploy to server via SSH (Podman)
        uses：appleboy/ssh-action@v1
        with：
          host：${{ secrets.SSH_HOST }}
          port：${{ secrets.SSH_PORT }}
          username：${{ secrets.SSH_USERNAME }}
          key：${{ secrets.SSH_PRIVATE_KEY }}
          script： |
            podman login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io

            # Stop and remove existing container if it exists
            podman stop python-crud || true
            podman rm python-crud || true

            # Remove existing image if it exists (optional)
            podman rmi ${{ vars.DOCKERHUB_USERNAME }}/python-crud:${{ github.sha }} || true

            # Pull new image from Docker Hub (using latest tag or specific sha)
            podman pull ${{ vars.DOCKERHUB_USERNAME }}/python-crud:${{ github.sha }}

            # Run new container with the pulled image (adjust as needed)
            podman run -d --name python-crud --network host ${{ vars.DOCKERHUB_USERNAME }}/python-crud:${{ github.sha }}
            echo "Container has been deployed successfully!"
